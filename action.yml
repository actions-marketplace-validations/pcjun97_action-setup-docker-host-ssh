name: 'Docker over SSH'
description: 'Setup connection to remote Docker Daemon through SSH'
inputs:
  host:
    description: 'Remote Docker host'
    required: true
  port:
    description: 'SSH port'
    required: false
    default: '22'
  user:
    description: 'SSH user'
    required: true
  key:
    description: 'Content of SSH private key'
    required: true
  key_path:
    description: 'Path to the SSH private key'
    required: false
    default: '/home/runner/.ssh/id_rsa'
  set_docker_host_env:
    description: 'If the DOCKER_HOST env should be changed'
    required: false
    default: 'true'
runs:
  using: 'composite'
  steps:
    - shell: bash
      env:
        SSH_KEY: ${{ inputs.key }}
        SSH_PORT: ${{ inputs.port }}
        SSH_HOST: ${{ inputs.host }}
        SSH_USER: ${{ inputs.user }}
        SSH_KEY_PATH: ${{ inputs.key_path }}
        SET_DOCKER_HOST_ENV: ${{ inputs.set_docker_host_env }}
      run: |
        echo key_path=$INPUT_KEY_PATH
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > $SSH_KEY_PATH
        chmod 600 $SSH_KEY_PATH
        ssh-keyscan -H $SSH_HOST 2> /dev/null 1> ~/.ssh/known_hosts
        echo "Host $SSH_HOST" >> ~/.ssh/config
        echo "    IdentityFile $SSH_KEY_PATH" >> ~/.ssh/config
        if [ $SET_DOCKER_HOST_ENV = true ]; then
          echo "DOCKER_HOST=ssh://$SSH_USER@$SSH_HOST:$SSH_PORT" >> $GITHUB_ENV
        fi
        echo "::set-output name=docker-host::ssh://$SSH_USER@SSH_HOST:$SSH_PORT"
